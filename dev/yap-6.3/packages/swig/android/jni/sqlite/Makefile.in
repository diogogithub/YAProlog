#
# This is used to generate a sqlite3 library for YAP bootstrap
# (EROOT for architecture-dependent files)
#
abs_top_builddir = $( pwd )
prefix = ../gmp-android
exec_prefix = $(prefix)
ROOTDIR = $(prefix)
EROOTDIR = $(prefix)
srcdir = $(abs_top_builddir)
#
# where the binary should be
#
BINDIR = $(EROOTDIR)/bin
#
# where YAP should look for libraries
#
LIBDIR=li
YAPLIBDIR=@libdir@/Yap
#
#
CC=cc
CXX=c++

CFLAGS= -shared -fPIC -O -g -Wall  -I. -Inativehelper
CFLAGS = -DHAVE_CONFIG_H -DKHTML_NO_EXCEPTIONS -DGKWQ_NO_JAVA
CFLAGS += -DNO_SUPPORT_JS_BINDING -DQT_NO_WHEELEVENT -DKHTML_NO_XBL
CFLAGS += -U__APPLE__
CFLAGS += -Wno-unused-parameter -Wno-int-to-pointer-cast
CFLAGS += -Wno-maybe-uninitialized -Wno-parentheses

CPPFLAGS += $(CFLAGS) -Wno-conversion-null

LDFLAGS=@LDFLAGS@


OBJS =                            \
	android_database_SQLiteCommon.o     \
	android_database_SQLiteConnection.o \
	android_database_SQLiteGlobal.o     \
	android_database_SQLiteDebug.o      \
	JNIHelp.o JniConstants.o

OBJS += sqlite3.o

#
#
# You shouldn't need to change what follows.
#
INSTALL=install
INSTALL_DATA=install_data
INSTALL_PROGRAM=install
SHELL=/bin/sh
RANLIB=ranlib
SO=so
CXXFLAGS=  -shared -export-dynamic $(CFLAGS)
#




libsqliteX.so: $(OBJS)
@DO_SECOND_LD@	g++ $(LDFLAGS) -o $< $@ -ldl -llog

.o: $(srcdir)/%.c
		$(CC) -c $(CFLAGS) $< -o $@

.o: $(srcdir)/%.cpp
		$(CXX) -c $(CXXFLAGS) $< -o $@



install: all install-examples
	$(INSTALL_PROGRAM) $(SOBJS) $(DESTDIR)$(YAPLIBDIR)

install-examples:

clean:
	rm -f *.o *~ $(OBJS) $(SOBJS) *.BAK

distclean: clean
	rm -f Makefile
